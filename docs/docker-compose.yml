version: '3.8'

name: my-food-delivery-app
services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_DATABASE: fddb
      MYSQL_USER: fduser
      MYSQL_PASSWORD: fduser@123
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7.0-alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage
  minio:
    image: minio/minio
    container_name: minio-container
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./uploads:/app/uploads
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Elasticsearch for search
  elasticsearch:
      container_name: es-container
      image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
      environment:
        - xpack.security.enabled=false
        - "discovery.type=single-node"
      networks:
        - es-net
      ports:
        - 9200:9200

  kibana:
      container_name: kb-container
      image: docker.elastic.co/kibana/kibana:8.12.0
      environment:
        - ELASTICSEARCH_HOSTS=http://es-container:9200
      networks:
        - es-net
      depends_on:
        - elasticsearch
      ports:
        - 5601:5601

  # NATs: Publish & Subscribe message
  nats:
    container_name: nats-container
    image: nats:latest
    ports:
      - "4222:4222"   # Client connections
      - "8222:8222"   # HTTP monitoring (optional)

  # Jaeger: Distributed tracing
  jaeger:
    container_name: jaeger-container
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # Jaeger collector HTTP (legacy)
      - "14250:14250"   # Jaeger collector gRPC (legacy)
      - "4318:4318"     # OTLP HTTP receiver
      - "4317:4317"     # OTLP gRPC receiver
      - "6831:6831/udp" # Jaeger agent UDP
      - "6832:6832/udp" # Jaeger agent UDP
      - "5778:5778"     # Jaeger agent HTTP
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3



networks:
  es-net:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
  minio-data:
  elasticsearch-data:
  kibana-data:
