{
  "info": {
    "name": "Order Flow API Tests",
    "description": "Complete API test collection for the order food flow",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "YOUR_JWT_TOKEN_HERE",
      "type": "string"
    },
    {
      "key": "cartId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "testUserId",
      "value": "test-user-id",
      "type": "string"
    },
    {
      "key": "testRestaurantId",
      "value": "test-restaurant-id",
      "type": "string"
    },
    {
      "key": "testFoodId1",
      "value": "test-food-1",
      "type": "string"
    },
    {
      "key": "testFoodId2",
      "value": "test-food-2",
      "type": "string"
    },
    {
      "key": "testCardId",
      "value": "test-card-id",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/ping",
          "host": ["{{baseUrl}}"],
          "path": ["ping"]
        }
      },
      "response": []
    },
    {
      "name": "2. Add First Item to Cart",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.id) {",
              "        pm.collectionVariables.set('cartId', response.data.id);",
              "        console.log('Cart ID set to:', response.data.id);",
              "    }",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"foodId\": \"{{testFoodId1}}\",\n  \"quantity\": 2\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/carts",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "carts"]
        }
      },
      "response": []
    },
    {
      "name": "3. Add Second Item to Cart",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"foodId\": \"{{testFoodId2}}\",\n  \"quantity\": 1\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/carts",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "carts"]
        }
      },
      "response": []
    },
    {
      "name": "4. View Cart Contents",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/v1/carts",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "carts"]
        }
      },
      "response": []
    },
    {
      "name": "5. Create Order from Cart (Card Payment)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.orderId) {",
              "        pm.collectionVariables.set('orderId', response.data.orderId);",
              "        console.log('Order ID set to:', response.data.orderId);",
              "    }",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"cartId\": \"{{cartId}}\",\n  \"deliveryAddress\": {\n    \"cityId\": 1,\n    \"cityName\": \"Ho Chi Minh City\",\n    \"addr\": \"123 Test Street, District 1\",\n    \"lat\": 10.762622,\n    \"lng\": 106.660172\n  },\n  \"paymentMethod\": \"card\",\n  \"cardId\": \"{{testCardId}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/from-cart",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "from-cart"]
        }
      },
      "response": []
    },
    {
      "name": "6. Get Order Details",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}"]
        }
      },
      "response": []
    },
    {
      "name": "7. Update Order State to Preparing",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"newState\": \"preparing\",\n  \"shipperId\": \"test-shipper-123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}/state",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}", "state"]
        }
      },
      "response": []
    },
    {
      "name": "8. Assign Shipper",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"shipperId\": \"test-shipper-456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}/assign-shipper",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}", "assign-shipper"]
        }
      },
      "response": []
    },
    {
      "name": "9. Update Order State to On The Way",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"newState\": \"on_the_way\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}/state",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}", "state"]
        }
      },
      "response": []
    },
    {
      "name": "10. Update Payment Status to Paid",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"paymentStatus\": \"paid\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}/payment-status",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}", "payment-status"]
        }
      },
      "response": []
    },
    {
      "name": "11. Update Order State to Delivered",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"newState\": \"delivered\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}/state",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}", "state"]
        }
      },
      "response": []
    },
    {
      "name": "12. Verify Final Order State",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}"]
        }
      },
      "response": []
    },
    {
      "name": "Error Test: Invalid Cart ID",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"cartId\": \"invalid-cart-id\",\n  \"deliveryAddress\": {\n    \"cityId\": 1,\n    \"cityName\": \"Ho Chi Minh City\",\n    \"addr\": \"123 Test Street\"\n  },\n  \"paymentMethod\": \"cash\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/from-cart",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "from-cart"]
        }
      },
      "response": []
    },
    {
      "name": "Error Test: Missing Payment Method",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"cartId\": \"{{cartId}}\",\n  \"deliveryAddress\": {\n    \"cityId\": 1,\n    \"cityName\": \"Ho Chi Minh City\",\n    \"addr\": \"123 Test Street\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/from-cart",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "from-cart"]
        }
      },
      "response": []
    },
    {
      "name": "Error Test: Invalid State Transition",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"newState\": \"waiting_for_shipper\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/v1/orders/{{orderId}}/state",
          "host": ["{{baseUrl}}"],
          "path": ["v1", "orders", "{{orderId}}", "state"]
        }
      },
      "response": []
    }
  ]
}
