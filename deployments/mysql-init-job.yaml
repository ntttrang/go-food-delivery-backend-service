apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: food-delivery
data:
  init.sql: |
    DROP TABLE IF EXISTS `carts`;
    CREATE TABLE `carts` (
      `id` VARCHAR(36)  NOT NULL,
      `user_id` VARCHAR(36)  NOT NULL,
      `food_id` VARCHAR(36)  NOT NULL,
      `restaurant_id` VARCHAR(36)  NOT NULL,
      `quantity` int NOT NULL,
      `dropoff_lat` float NOT NULL,
      `dropoff_lng` float NOT NULL,
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`user_id`,`food_id`),
      KEY `food_id` (`food_id`)
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `categories`;
    CREATE TABLE `categories` (
      `id` VARCHAR(36) NOT NULL,
      `name` varchar(100) NOT NULL,
      `description` text,
      `icon` json DEFAULT NULL,
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `cities`;
    CREATE TABLE `cities` (
      `id` INT NOT NULL,
      `title` varchar(100) NOT NULL,
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `foods`;
    CREATE TABLE `foods` (
      `id` VARCHAR(36) NOT NULL,
      `restaurant_id` VARCHAR(36)  NOT NULL,
      `category_id` VARCHAR(36) DEFAULT NULL,
      `name` varchar(255) NOT NULL,
      `description` text,
      `price` float NOT NULL,
      `images` text,
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`),
      KEY `restaurant_id` (`restaurant_id`) USING BTREE,
      KEY `category_id` (`category_id`) USING BTREE,
      KEY `status` (`status`) USING BTREE
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `images`;
    CREATE TABLE `images` (
      `id` VARCHAR(36) NOT NULL,
      `filename` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
      `cloud_name` VARCHAR(255) NOT NULL,
      `size` BIGINT NOT NULL,
      `ext` VARCHAR(50) NOT NULL,
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `restaurants`;
    CREATE TABLE `restaurants` (
      `id` VARCHAR(36) NOT NULL,
      `owner_id` VARCHAR(36)  NOT NULL,
      `name` varchar(50) NOT NULL,
      `addr` varchar(255) NOT NULL,
      `city_id` INT  DEFAULT NULL,
      `lat` double DEFAULT NULL,
      `lng` double DEFAULT NULL,
      `cover` json NOT NULL,
      `logo` json NOT NULL,
      `shipping_fee_per_km` double DEFAULT '0',
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`),
      KEY `owner_id` (`owner_id`) USING BTREE,
      KEY `city_id` (`city_id`) USING BTREE,
      KEY `status` (`status`) USING BTREE
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `user_addresses`;
    CREATE TABLE `user_addresses` (
      `id` VARCHAR(36) NOT NULL,
      `user_id` VARCHAR(36)  NOT NULL,
      `city_id` INT  NOT NULL,
      `title` varchar(100) DEFAULT NULL,
      `icon` json DEFAULT NULL,
      `addr` varchar(255) NOT NULL,
      `lat` double DEFAULT NULL,
      `lng` double DEFAULT NULL,
      `status` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`),
      KEY `user_id` (`user_id`) USING BTREE,
      KEY `city_id` (`city_id`) USING BTREE
    ) ENGINE=InnoDB;

    DROP TABLE IF EXISTS `users`;
    CREATE TABLE `users` (
      `id` VARCHAR(36) NOT NULL,
      `email` varchar(50) NOT NULL,
      `fb_id` varchar(50) DEFAULT NULL,
      `gg_id` varchar(50) DEFAULT NULL,
      `password` varchar(100) NOT NULL,
      `salt` varchar(50) DEFAULT NULL,
      `last_name` varchar(50) NOT NULL,
      `first_name` varchar(50) NOT NULL,
      `phone` varchar(20) DEFAULT NULL,
      `role` enum('USER','ADMIN','SHIPPER') NOT NULL DEFAULT 'USER',
      `type` enum('EMAIL_PASSWORD','FACEBOOK','GMAIL') NOT NULL DEFAULT 'EMAIL_PASSWORD',
      `avatar` json DEFAULT NULL,
      `status` enum('ACTIVE', 'INACTIVE', 'PENDING', 'BANNED', 'DELETED') NOT NULL DEFAULT 'ACTIVE',
      `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
      `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      PRIMARY KEY (`id`),
      UNIQUE KEY `email` (`email`)
    ) ENGINE=InnoDB;

    INSERT INTO `cities` (`id`, `title`, `status`, `created_at`, `updated_at`) VALUES
    (1, 'An Giang', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (2, 'Vũng Tàu', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (3, 'Bắc Giang', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (4, 'Bắc Cạn', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (5, 'Bạc Liêu', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (6, 'Bắc Ninh', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (7, 'Bến Tre', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (8, 'Bình Định', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (9, 'Bình Dương', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22'),
    (10, 'Bình Phước', 1, '2025-03-23 06:52:22', '2025-03-23 06:52:22');
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-init-job
  namespace: food-delivery
spec:
  template:
    spec:
      containers:
      - name: mysql-init
        image: mysql:8.0
        command: ["/bin/bash", "-c"]
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until mysql -h mysql -u root -prootpassword -e "SELECT 1"; do
            sleep 2
          done
          echo "MySQL is ready. Initializing database..."
          mysql -h mysql -u root -prootpassword food_delivery < /docker-entrypoint-initdb.d/init.sql
          echo "Database initialization completed."
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      restartPolicy: OnFailure
      volumes:
      - name: init-script
        configMap:
          name: mysql-init-script
